{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","correctTab","find","tab","id","correctTabId","className","map","classNames","href","onClick","title","content","App","useState","setSelectedTabId","selectedTab","setSelectedTab","ReactDOM","render","document","getElementById"],"mappings":"kNASaA,EAAwB,SAAC,GAI/B,IAAD,EAHJC,EAGI,EAHJA,KACAC,EAEI,EAFJA,cACAC,EACI,EADJA,cAEMC,EAAaH,EAAKI,MAAK,SAAAC,GAAG,OAAIJ,IAAkBI,EAAIC,MAEpDC,EAAeJ,EAAaA,EAAWG,GAAKN,EAAK,GAAGM,GAE1D,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKE,UAAU,gBAAf,SACE,6BACGR,EAAKS,KAAI,SAAAJ,GAAG,OACX,oBACE,UAAQ,MAERG,UAAWE,IACT,CAAE,YAAaH,IAAiBF,EAAIC,KAJxC,SAOE,mBACEK,KAAI,WAAMN,EAAIC,IACd,UAAQ,UACRM,QAAS,WACHX,IAAkBI,EAAIC,IACxBJ,EAAcG,IALpB,SASGA,EAAIQ,SAdFR,EAAIC,WAqBjB,qBAAKE,UAAU,QAAQ,UAAQ,aAA/B,mBACGR,EAAKI,MAAK,SAAAC,GAAG,OAAIJ,IAAkBI,EAAIC,aAD1C,aACG,EAA4CQ,cCxCxCd,EAAO,CAClB,CAAEM,GAAI,QAASO,MAAO,QAASC,QAAS,eACxC,CAAER,GAAI,QAASO,MAAO,QAASC,QAAS,eACxC,CAAER,GAAI,QAASO,MAAO,QAASC,QAAS,gBAG7BC,EAAgB,WAC3B,MAA0CC,mBAAShB,EAAK,GAAGM,IAA3D,mBAAOL,EAAP,KAAsBgB,EAAtB,KACA,EAAsCD,mBAAShB,EAAK,IAApD,mBAAOkB,EAAP,KAAoBC,EAApB,KAOA,OACE,sBAAKX,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBU,EAAYL,SAGlC,cAAC,EAAD,CACEb,KAAMA,EACNC,cAAeA,EACfC,cAdgB,SAACG,GACrBc,EAAed,GACfY,EAAiBZ,EAAIC,WChBzBc,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.c5da3b93.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { TabType } from '../../types/TabType';\n\ntype Props = {\n  tabs: TabType[];\n  selectedTabId: string;\n  onTabSelected: (tab: TabType) => void;\n};\n\nexport const Tabs: React.FC<Props> = ({\n  tabs,\n  selectedTabId,\n  onTabSelected,\n}) => {\n  const correctTab = tabs.find(tab => selectedTabId === tab.id);\n\n  const correctTabId = correctTab ? correctTab.id : tabs[0].id;\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => (\n            <li\n              data-cy=\"Tab\"\n              key={tab.id}\n              className={classNames(\n                { 'is-active': correctTabId === tab.id },\n              )}\n            >\n              <a\n                href={`#${tab.id}`}\n                data-cy=\"TabLink\"\n                onClick={() => {\n                  if (selectedTabId !== tab.id) {\n                    onTabSelected(tab);\n                  }\n                }}\n              >\n                {tab.title}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {tabs.find(tab => selectedTabId === tab.id)?.content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\nimport { TabType } from './types/TabType';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTabId, setSelectedTabId] = useState(tabs[0].id);\n  const [selectedTab, setSelectedTab] = useState(tabs[0]);\n\n  const onTabSelected = (tab: TabType) => {\n    setSelectedTab(tab);\n    setSelectedTabId(tab.id);\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${selectedTab.title}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId}\n        onTabSelected={onTabSelected}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}